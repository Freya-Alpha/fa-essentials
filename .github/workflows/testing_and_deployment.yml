name: Unit Tests, build & deploy library
on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
jobs:
  build:
    if: contains(github.event.head_commit.message, '[AUTO]') == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip          
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Create Docker network
        run: docker network create local-kafka-network

      - name: Start Kafka and ksqlDB
        working-directory: ./tests
        run: docker-compose up -d

      - name: Wait for Kafka to be ready
        run: |
          until docker exec kafka1 kafka-topics --bootstrap-server kafka1:29092 --list > /dev/null 2>&1; do
            echo "Waiting for Kafka to be ready..."
            sleep 5
          done

      - name: Wait for ksqlDB to be ready
        run: |
          until [[ "$(curl -s http://localhost:8088/info | jq -r '.KsqlServerInfo.serverStatus')" == "RUNNING" ]]; do
            echo "Waiting for ksqlDB to be ready..."
            sleep 5
          done

      - name: Set Project Root Environment Variable for the tests
        run: echo "PROJECT_ROOT=$(pwd)" >> $GITHUB_ENV    

      - name: Create required Directories and print Directory
        run: |
          mkdir -p config logs
          echo "Directories created in:"
          pwd
          ls -l  # Optional: List files and directories to show 'config' and 'logs'

      - name: Install development dependencies
        run: |
          python -m pip install --upgrade pip          
          pip install pytest
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi    

      - name: Running all PyTests
        run: |
          pytest -s -vv

  pypi-publish:
    needs: build
    name: upload release to PyPI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9.13
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build bumpver --upgrade setuptools
      - name: Configure git
        run: |
          git config --local user.email "brayan@brayan.com"
          git config --local user.name "svabra"
      - name: Bump version
        if: contains(github.event.head_commit.message, '[AUTO]') == false
        run: bumpver update --patch --commit-message "[AUTO] Bump version"
      - name: Build package
        run: python -m build
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
