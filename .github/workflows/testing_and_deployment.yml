name: Unit Tests, build & deploy library
on:
  push:
    branches: [ main ]
    # Exclude commits with the specific commit message from triggering the workflow
    paths-ignore:
      - '**.md'
jobs:

  # BUILD AND TEST THE LIBRARY
  build:
    if: contains(github.event.head_commit.message, '[AUTO]') == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9.13"]
    steps:
    - uses: actions/checkout@v4
      # with:
      #   token: ${{ secrets.REPO_ACCESS_TOKEN }}  
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip          
        pip install pytest redis
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Install Docker Compose
    #   run: sudo curl -L "https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose
    - name: Start Redis Cluster
      run: docker-compose -f tests/docker-compose.yaml up -d    
    - name: List running containers
      run: docker ps
    - name: Wait for Redis to be ready
      run: |
        for service in leader_1 leader_2 leader_3; do
            while [ "$(docker inspect -f '{{.State.Health.Status}}' $service)" != "healthy" ]; do
                echo "Waiting for $service..."
                sleep 5
            done
        done
    - name: Initiate the Cluster
      run: echo "yes" | docker exec -i leader_1 redis-cli -a my-password --cluster create 172.30.0.11:6379 172.30.0.12:6379 172.30.0.13:6379 --cluster-replicas 0
    
    - name: Wait for 3 seconds
      run: sleep 3
    
    - name: Set Project Root Environment Variable for the tests
      run: echo "PROJECT_ROOT=$(pwd)" >> $GITHUB_ENV    
    - name: Create required Directories and print Directory
      run: |
        mkdir -p config logs
        echo "Directories created in:"
        pwd
        ls -l  # Optional: List files and directories to show 'config' and 'logs'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip          
        pip install pytest
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi    

    - name: Running all PyTests
      run: |
        pytest -s -vv
    - name: Shutdown Redis Cluster
      run: docker-compose -f tests/docker-compose.yaml down

  # DEPLOY THE LIBRARY TO PYPI   
  pypi-publish:
    needs: build
    #if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[AUTO]') == false
    name: upload release to PyPI
    runs-on: ubuntu-latest
    #environment: release  # Define your GitHub Environment name here
    permissions:
      id-token: write  # Required for OIDC
      contents: read
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9.13
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build bumpver --upgrade setuptools
    - name: Configure git
      run: |
        git config --local user.email "brayan@brayan.com"
        git config --local user.name "svabra"
    # Only bump version if not an [AUTO] commit
    - name: Bump version
      if: contains(github.event.head_commit.message, '[AUTO]') == false
      run: bumpver update --patch --commit-message "[AUTO] Bump version"
    - name: Build package
      run: python -m build
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
