name: Unit Tests, build & deploy library
on:
  push:
    branches: [ main ]
jobs:

  # BUILD AND TEST THE LIBRARY
  build:
    if: contains(github.event.head_commit.message, '[AUTO]') == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9.13"]
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}  
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip          
        pip install pytest redis
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install Docker Compose
      run: sudo curl -L "https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && sudo chmod +x /usr/local/bin/docker-compose
    - name: List repository contents
      run: ls -la    
    - name: Start Redis Cluster
      run: docker-compose -f tests/docker-compose.yaml up -d
    - name: Running all PyTests
      env:
        REDIS_OM_URL: redis://localhost:6379/0
      run: |
        pytest -s -vv
    - name: Shutdown Redis Cluster
      run: docker-compose -f tests/docker-compose.yaml down

  # DEPLOY THE LIBRARY TO PYPI
  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[AUTO]') == false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9.13
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine bumpver --upgrade setuptools
    - name: Configure git
      run: |
        git config --local user.email "brayan@brayan.com"
        git config --local user.name "svabra"
    - name: Bump version
      run: bumpver update --patch --commit-message "[AUTO] Bump version"
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m build
        twine check dist/*
        twine upload dist/*
